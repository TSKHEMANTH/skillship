//Spiral matrix
//Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.



/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* spiralOrder(int** matrix, int matrixSize, int* matrixColSize, int* returnSize){
    int top,down,left,right;
    int q=0;
    top=0;
    down=matrixSize-1;
    left=0;
    right=(*matrixColSize)-1;
    int dir=0;
    *returnSize=matrixSize*(* matrixColSize);
    *returnSize=(down+1)*(right+1);
    int f;
    f=(*returnSize);
    int *a=malloc(sizeof(int)*f);
    int i;
    while(top<=down && left<=right)
    {
        if(dir==0)
        {
            for(i=left;i<=right;i++)
            {
                a[q]=matrix[top][i];
                q++;
            }
            top++;
        }
        else if(dir==1)
        {
            for(i=top;i<=down;i++)
            {
                a[q]=matrix[i][right];
                q++;
            }
            right-=1;
        }
        else if(dir==2)
        {
            for(i=right;i>=left;i--)
            {
                a[q]=matrix[down][i];
                q++;
            }
            down-=1;
        }
        else if(dir==3)
        {
            for(i=down;i>=top;i--)
            {
                a[q]=matrix[i][left];
                q++;
            }
            left++;
        }
        dir=(dir+1)%4;
    }
    return a;
}
