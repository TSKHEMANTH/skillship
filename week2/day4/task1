//Naive algorithm for Pattern Searching
//Given a text txt[0..n-1] and a pattern pat[0..m-1], write a function search(char pat[], char txt[]) that prints all occurrences of pat[] in txt[].
//You may assume that n > m.

#include <stdio.h>
#include <string.h>

int main()
{
    int i=0,j;
    char s[100];
    char p[100];
    printf("s= ");
    scanf("%s",s);
    printf("p=");
    scanf("%s",p);
    int s1=0,s2=0;
    /*while(s[i]!='\0');
    {
        s1++;
        i++;
    }*/
    s1=strlen(s);
    printf("%d\n",s1);
    i=0;
    int f;
    /*while(p[i]!='\0');
    {
        s2++;
        i++;
    }*/
    s2=strlen(p);
    printf("%d\n",s2);
    for(i=0;i<s1-s2+1;i++)
    {
         f=0;
        for(j=0;j<s2;j++)
        {
            if(s[i+j]!=p[j])
            {
                f=1;
                break;
            }
        }
        if(f==0)
        {
            printf("index %d\n",i);
            
        }
    }
    //printf("1");
    return 0;
}
