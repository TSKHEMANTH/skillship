//rotate list
/*Given a linked list, rotate the list to the right by k places, where k is non-negative.*/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* rotateRight(struct ListNode* head, int k){
int i,c=0;
    struct ListNode *p=head;
    struct ListNode *temp=head;
    struct ListNode *temp1=head;
    while(temp!=NULL)
    {
        temp=temp->next;
        c++;
    }
    temp=head;
    if(k==0 || head==NULL || head->next==NULL)
    {
        return head;
    }
    if(k>0 && k%c==0)
    {
        return head;
    }
    for(i=0;i<c-(k%c);i++)
    {
        p=head;
        head=head->next;
    }
    p->next=NULL;
    temp=head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=temp1;
    return head;
}
